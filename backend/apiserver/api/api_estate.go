/*
 * cross-chain-hackathon api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A EstateApiController binds http requests to an api service and writes the service results to the http response
type EstateApiController struct {
	service EstateApiServicer
}

// NewEstateApiController creates a default api controller
func NewEstateApiController(s EstateApiServicer) Router {
	return &EstateApiController{service: s}
}

// Routes returns all of the api route for the EstateApiController
func (c *EstateApiController) Routes() Routes {
	return Routes{
		{
			"GetEstateById",
			strings.ToUpper("Get"),
			"/api/estate/{estateId}",
			c.GetEstateById,
		},
		{
			"GetEstates",
			strings.ToUpper("Get"),
			"/api/estates",
			c.GetEstates,
		},
	}
}

// GetEstateById - get an estate and its trade data
func (c *EstateApiController) GetEstateById(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	estateId := params["estateId"]
	result, err := c.service.GetEstateById(estateId)
	if err != nil {
		w.WriteHeader(HttpStatus(err))
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// GetEstates - get all estates
func (c *EstateApiController) GetEstates(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetEstates()
	if err != nil {
		w.WriteHeader(HttpStatus(err))
		return
	}

	EncodeJSONResponse(result, nil, w)
}
